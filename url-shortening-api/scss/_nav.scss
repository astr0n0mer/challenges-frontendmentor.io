@use "./config";
@use "./mixins";

.header {
  position: sticky;
  top: 0;
  z-index: 1;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 3em;

  width: 100%;
  padding: 1em 0;
  background-color: rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(3px);
}

.nav {
  flex-grow: 1;

  &__hamburger {
    position: relative;
    z-index: 2; // to be on top of .nav--mobile when .nav--mobile is shrinked
  }

  &__menu {
    display: flex;
    flex-direction: column;
    gap: 1.5em;
    text-align: center;

    &--secondary {
      flex-grow: 1;
      padding-bottom: 1.75em;
      border-bottom: 1px solid var(--gray);
    }

    &--primary {
      padding-top: 1.75em;
    }

    @media (min-width: config.$tablet-start) {
      flex-direction: row;
      align-items: center;

      border-width: 0;
      padding: 0;
      font-weight: 700;
      font-size: 1rem;
      color: var(--gray);
    }
  }

  &__item {
    transition: scale 0.3s cubic-bezier(0.53, 1.34, 0.64, 1.04);

    &:active {
      scale: 0.9;
    }
  }

  &__link {
    &--primary {
      @include mixins.btn-primary();
      display: block;
      margin: 0 auto;
      max-width: 280px;
      padding: 0.5em 1.5em;

      background-color: var(--cyan);
      color: var(--white) !important;
    }
  }

  &--mobile {
    position: absolute;
    top: 200%;
    top: 100%;
    z-index: 1;
    visibility: hidden; // this is needed as the .nav__link are still clickable even when opacity is 0
    opacity: 0;
    translate: 36% -66%;
    translate: 37% -50%;
    scale: 0.25;
    transition: opacity 0.25s ease-in-out,
      translate 0.3s cubic-bezier(0.53, 1.34, 0.64, 1.04),
      scale 0.3s cubic-bezier(0.53, 1.34, 0.64, 1.04), visibility 0.31s;

    border-radius: 0.5em;
    width: 100%;
    padding: 2.5em;

    font-weight: 500;
    background-color: var(--dark-violet);
    color: var(--white);
  }

  &--desktop {
    display: none;

    // TODO: find a better way to set the below ruleset
    .nav__link {
      &:is(:hover, :focus-visible) {
        opacity: 0.75;
        color: var(--very-dark-violet);
      }
    }
  }

  &--active {
    visibility: visible;
    opacity: 0.95;
    translate: initial;
    scale: initial;
  }

  @media (min-width: config.$tablet-start) {
    &--mobile {
      display: none;
    }

    &--desktop {
      display: flex;
    }
  }
}

.hamburger {
  width: 2.5rem;
  background-color: transparent;

  .bar {
    display: block;
    margin: 0.25em;
    border-radius: 0.1em;
    height: 0.25em;
    background-color: var(--very-dark-violet);
    transition: all 0.3s cubic-bezier(0.62, 2, 0.91, 0.62);
  }

  &--active {
    .bar {
      &:nth-child(1) {
        transform: translateY(200%) rotate(45deg);
      }

      &:nth-child(2) {
        transform: translateY(-200%);
        opacity: 0;
      }

      &:nth-child(3) {
        transform: translateY(-200%) rotate(-45deg);
      }
    }
  }

  @media (min-width: config.$tablet-start) {
    display: none;
  }
}
